---
# - hosts: all
#   tasks:
#   - add_host:
#       name: "52.56.164.187"
#       groups: tag_Env_prod
#       wcivf_controller: yes
#       ansible_ssh_user: ubuntu
#       become: true
#     when: packer is undefined or packer is not 1
#
- hosts: all
  pre_tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      register: output
      changed_when: 'output.stdout != ""'
    - name: setup
      setup: filter=ansible_*
    - name: Install output on error
      template:
        src: files/scripts/output-on-error
        dest: /usr/local/bin/output-on-error
        mode: 0777
      become_user: root
  vars_files:
    - vars.yml
    - vault.yml
  gather_facts: false
  become: true
  roles:
    - install_initial
    - postgresql
    - every_election
  handlers:
    - include: handlers.yml
  tasks:
  - name: Create the project directory.
    file: state=directory path={{ project_root }}

  - name: Create user.
    user:
      home: "{{ project_root }}/home"
      name: "{{ project_name }}"
      state: present

  - name: Update the project directory.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}

  - name: Create the code directory.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}/code/

  - name: Change permissions.
    shell: "chown -R {{ project_name }}:{{ project_name }} {{ project_root }}"

  - name: Install nginx configuration file.
    template: src=files/conf/nginx.conf dest=/etc/nginx/sites-enabled/{{ project_name }}
    notify: restart nginx

  - name: Remove default nginx file.
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    notify: restart nginx

  - name: Install systemd init scripts.
    template:
      src: "files/systemd/{{ item }}.service"
      dest: "/etc/systemd/system/{{ project_name }}_{{ item }}.service"
    with_items: "{{ initfiles }}"
    when: ansible_distribution_version == "16.04"
    notify:
      - reload systemd
      - restart web frontend

  - name: Install systemd socket scripts.
    template:
      src: "files/systemd/{{ item }}.socket"
      dest: "/etc/systemd/system/{{ project_name }}_gunicorn.socket"
    with_items: "{{ initfiles }}"
    when: ansible_distribution_version == "16.04"
    notify:
      - reload systemd
      - restart web frontend

  - name: systemg gunicorn tmpfiles.d
    template:
      src: "files/systemd/{{ item }}.tmpfiles"
      dest: "/etc/tmpfiles.d/{{ project_name }}_gunicorn.conf"
    with_items: "{{ initfiles }}"
    when: ansible_distribution_version == "16.04"
    notify:
      - reload systemd
      - restart web frontend

  - name: "enable gunicorn"
    shell: "systemctl enable {{ project_name }}_gunicorn.socket"

  - name: "start gunicorn"
    shell: "systemctl start {{ project_name }}_gunicorn.socket"

  # - name: Add gunicorn to systemd
  #   systemd:
  #     name: "{{ project_name }}_gunicorn.socket"
  #     state: started
  #     enabled: yes

  - name: Set up handy bashrc file
    lineinfile:
      dest: "{{ project_root }}/home/.bashrc"
      line: 'cd && cd ../code && source ../env/bin/activate'

  - name: Set server dirty file
    file:
      path: "{{ project_root }}/home/server_dirty"
      state: touch
      mode: "u=rw,g=r,o=r"

- include: deploy.yml
